#ifndef THIRD_PARTY_NANOLIBC_CXX_INCLUDE_OPTIONAL_H_
#define THIRD_PARTY_NANOLIBC_CXX_INCLUDE_OPTIONAL_H_

namespace std {

struct nullopt_t
{
    explicit constexpr nullopt_t(int) noexcept {}
};

constexpr nullopt_t nullopt{0};

template <class T> class optional {
 public:
  optional(T value) : value_(value), has_value_(true) {}
  optional(nullopt_t value) : has_value_(false) {}
  optional() : has_value_(false) {}
  bool has_value() const { return has_value_; }
  T value() const { return value_; }
 private:
  T value_;
  bool has_value_;
};

}  // namespace std

#endif  // THIRD_PARTY_NANOLIBC_CXX_INCLUDE_OPTIONAL_H_
